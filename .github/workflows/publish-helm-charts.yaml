name: Publish Helm Charts

on:
  push:
    branches:
      - main
    # paths:
    #   - 'charts/**'  # Only trigger when there are changes in the charts folder

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch the last 2 commits to ensure HEAD~1 is available


      - name: Detect changed charts and update versions
        id: detect-changes
        run: |
          # Initialize an array to store changed charts
          changed_charts=()

          # Check for changes in each chart directory
          for chart_dir in charts/*; do
            if git diff --name-only HEAD~1 | grep -q "^$chart_dir/"; then
              echo "Detected changes in $chart_dir"
              changed_charts+=("$chart_dir")
              # Auto-increment the patch version
              current_version=$(yq e '.version' "$chart_dir/Chart.yaml")
              new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF += 1 ; print}')
              echo "Updating $chart_dir version from $current_version to $new_version"
              yq e -i ".version = \"$new_version\"" "$chart_dir/Chart.yaml"
            fi
          done

          # Output changed charts as a comma-separated string for use in the next steps
          echo "changed_charts=$(IFS=, ; echo "${changed_charts[*]}")" >> $GITHUB_ENV

      - name: Package updated Helm charts
        if: ${{ env.changed_charts != '' }}
        run: |
          # Create docs directory if it doesn't exist
          mkdir -p docs
          # Package only the changed charts
          for chart_dir in ${changed_charts//,/ }; do
            echo "Packaging $chart_dir"
            helm package "$chart_dir" --destination docs
          done

      - name: Update Helm repository index
        if: ${{ env.changed_charts != '' }}
        run: |
          helm repo index docs --url https://kubikobot.github.io/helm-charts

      - name: Generate README.md with dynamic chart list
        if: ${{ env.changed_charts != '' }}
        run: |
          echo "# Helm Charts Repository" > docs/README.md
          echo "" >> docs/README.md
          echo "Welcome to the Helm Charts repository. This repository hosts Helm charts for various applications. You can add this repository to your Helm configuration with:" >> docs/README.md
          echo "" >> docs/README.md
          echo '```bash' >> docs/README.md
          echo "helm repo add kubikobot https://kubikobot.github.io/helm-charts" >> docs/README.md
          echo "helm repo update" >> docs/README.md
          echo '```' >> docs/README.md
          echo "" >> docs/README.md
          echo "## Available Charts" >> docs/README.md
          echo "" >> docs/README.md

          # Loop through each chart in the docs directory
          for chart_tgz in docs/*.tgz; do
            chart_name=$(basename "$chart_tgz" .tgz)
            chart_version=$(helm show chart "$chart_tgz" | grep version | awk '{print $2}')
            chart_description=$(helm show chart "$chart_tgz" | grep description | cut -d ' ' -f 2-)

            # Add chart details to README
            echo "- **$chart_name** (version $chart_version)" >> docs/README.md
            echo "  - Description: $chart_description" >> docs/README.md
            echo "  - Install: \`helm install <release-name> kubikobot/$chart_name --version $chart_version\`" >> docs/README.md
            echo "" >> docs/README.md
          done

          # Add usage instructions
          echo "## Usage Instructions" >> docs/README.md
          echo "To install a chart, use the following command:" >> docs/README.md
          echo "" >> docs/README.md
          echo '```bash' >> docs/README.md
          echo "helm install <release-name> kubikobot/<chart-name> --version <version>" >> docs/README.md
          echo '```' >> docs/README.md

      - name: Commit and push changes
        if: ${{ env.changed_charts != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Add files to the commit and push if there are any changes
          git add docs/
          git diff --quiet && echo "No changes to commit" || (git commit -m "Update Helm chart repository and README" && git push)
